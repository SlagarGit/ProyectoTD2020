geom_area(aes(y = Q95)) +
geom_area(aes(y = Q75)) +
geom_area(aes(y = Q50)) +
geom_area(aes(y = Q25)) +
geom_area(aes(y = Q05)) +
theme_minimal() +
scale_fill_brewer(palette = 15) +
facet_wrap(~ anio, ncol = 2)
ggplot(Q_6, aes(x = semana)) +
geom_area(aes(y = Q95), fill = "#999999", color = "#999999", alpha = 0.5) +
geom_area(aes(y = Q75), fill = "#333333", color = "#333333", alpha = 0.5) +
geom_area(aes(y = Q50), fill = "#E69F00", color = "#E69F00", alpha = 0.5) +
geom_area(aes(y = Q25), fill = "#CC6633", color = "#CC6633", alpha = 0.5) +
geom_area(aes(y = Q05), fill = "#FFFF00", color = "#FFFF00", alpha = 0.5) +
theme_minimal() +
facet_wrap(~ anio, ncol = 2)
ggplot(Q_6, aes(x = semana)) +
geom_area(aes(y = Q95), fill = "#999999", color = "#999999", alpha = 0.5) +
geom_area(aes(y = Q75), fill = "#99FF99", color = "#99FF99", alpha = 0.5) +
geom_area(aes(y = Q50), fill = "#E69F00", color = "#E69F00", alpha = 0.5) +
geom_area(aes(y = Q25), fill = "#CC6633", color = "#CC6633", alpha = 0.5) +
geom_area(aes(y = Q05), fill = "#FFFF00", color = "#FFFF00", alpha = 0.5) +
theme_minimal() +
facet_wrap(~ anio, ncol = 2)
ggplot(Q_6, aes(x = semana)) +
geom_area(aes(y = Q95), fill = "#999999", color = "#999999", alpha = 0.5) +
geom_area(aes(y = Q75), fill = "#666666", color = "#666666", alpha = 0.5) +
geom_area(aes(y = Q50), fill = "#E69F00", color = "#E69F00", alpha = 0.5) +
geom_area(aes(y = Q25), fill = "#CC6633", color = "#CC6633", alpha = 0.5) +
geom_area(aes(y = Q05), fill = "#FFFF00", color = "#FFFF00", alpha = 0.5) +
theme_minimal() +
facet_wrap(~ anio, ncol = 2)
ggplot(Q_6, aes(x = semana)) +
geom_area(aes(y = Q95), fill = "#999999", color = "#999999", alpha = 0.5) +
geom_area(aes(y = Q75), fill = "#333333", color = "#333333", alpha = 0.5) +
geom_area(aes(y = Q50), fill = "#E69F00", color = "#E69F00", alpha = 0.5) +
geom_area(aes(y = Q25), fill = "#CC6633", color = "#CC6633", alpha = 0.5) +
geom_area(aes(y = Q05), fill = "#666666", color = "#FFFF00", alpha = 0.5) +
theme_minimal() +
facet_wrap(~ anio, ncol = 2)
ggplot(Q_6, aes(x = semana)) +
geom_area(aes(y = Q95), fill = "#999999", color = "#999999", alpha = 0.5) +
geom_area(aes(y = Q75), fill = "#333333", color = "#333333", alpha = 0.5) +
geom_area(aes(y = Q50), fill = "#E69F00", color = "#E69F00", alpha = 0.5) +
geom_area(aes(y = Q25), fill = "#CC6633", color = "#CC6633", alpha = 0.5) +
geom_area(aes(y = Q05), fill = "#FF9900", color = "#FF9900", alpha = 0.5) +
theme_minimal() +
facet_wrap(~ anio, ncol = 2)
ggplot(Q_6, aes(x = semana)) +
geom_area(aes(y = Q95), fill = "#999999", color = "#999999", alpha = 0.5) +
geom_area(aes(y = Q75), fill = "#333333", color = "#333333", alpha = 0.5) +
geom_area(aes(y = Q50), fill = "#E69F00", color = "#E69F00", alpha = 0.5) +
geom_area(aes(y = Q25), fill = "#CC6633", color = "#CC6633", alpha = 0.5) +
geom_area(aes(y = Q05), fill = "#FFCC00", color = "#FFCC00", alpha = 0.5) +
theme_minimal() +
facet_wrap(~ anio, ncol = 2)
qqPlot(TD_no_zero$`intensidad pesados`)
TD_no_zero %>%
select(`intensidad total`:`distancia media entre vehiculos`) %>%
ggpairs()
select(TD_imputados, `intensidad total`:`distancia media entre vehiculos`) %>%
gather(key = "Medicion", value = "Valor") %>%
mutate(Medicion = as.factor(Medicion)) %>%
ggplot(aes(x = Medicion, y = Valor)) +
geom_boxplot() +
scale_color_brewer(palette  = "Dark2") +
theme_bw()
select(TD_no_zero, `intensidad total`:`distancia media entre vehiculos`) %>%
gather(key = "Medicion", value = "Valor") %>%
mutate(Medicion = as.factor(Medicion)) %>%
ggplot(aes(x = Medicion, y = Valor)) +
geom_boxplot() +
scale_color_brewer(palette  = "Dark2") +
theme_bw()
select(TD_imputados, `intensidad total`:`distancia media entre vehiculos`) %>%
gather(key = "Medicion", value = "Valor") %>%
mutate(Medicion = as.factor(Medicion)) %>%
ggplot(aes(x = Medicion, y = Valor, fill = Medicion)) +
geom_boxplot() +
theme_bw()
select(TD_no_zero, `intensidad total`:`distancia media entre vehiculos`) %>%
gather(key = "Medicion", value = "Valor") %>%
mutate(Medicion = as.factor(Medicion)) %>%
ggplot(aes(x = Medicion, y = Valor, fill = Medicion)) +
geom_boxplot() +
theme_bw()
View(Q2)
str(TD)
TD_imputados %>%
select_if(is.numeric) %>%
apply(MARGIN = 2, sort, decreasing = TRUE, na.last = TRUE) %>%
as.data.frame() %>%
head() %>%
kable(format  = "html", table.attr = "style='width:100%;'")
TD_imputados %>%
select_if(is.numeric) %>%
apply(MARGIN = 2, sort, decreasing = TRUE) %>%
as.data.frame() %>%
head() %>%
kable(format  = "html", table.attr = "style='width:100%;'")
Q1 <- TD_imputados %>%
select(hora, dia, mes, anio, `intensidad total`, carril) %>%
group_by(anio, mes, dia, hora, carril) %>%
summarise(`intensidad por hora` = sum(`intensidad total`)) %>%
mutate(`Nivel de intensidad` = ifelse(`intensidad por hora` < 800 , "BAJA",
ifelse(`intensidad por hora` < 1600, "MEDIA",
ifelse(`intensidad por hora` < 2400, "ALTA",
"EXCESIVA")))) %>%
arrange(desc(`intensidad por hora`))
Q1.1 <- Q1 %>%
group_by(`Nivel de intensidad`) %>%
summarise(Frecuencia = n()) %>%
mutate(`Nivel de intensidad` = factor(`Nivel de intensidad`,
levels = c("BAJA", "MEDIA", "ALTA", "EXCESIVA")))
arrange(desc(Frecuencia))
Q1 <- TD_imputados %>%
select(hora, dia, mes, anio, `intensidad total`, carril) %>%
group_by(anio, mes, dia, hora, carril) %>%
summarise(`intensidad por hora` = sum(`intensidad total`)) %>%
mutate(`Nivel de intensidad` = ifelse(`intensidad por hora` < 800 , "BAJA",
ifelse(`intensidad por hora` < 1600, "MEDIA",
ifelse(`intensidad por hora` < 2400, "ALTA",
"EXCESIVA")))) %>%
arrange(desc(`intensidad por hora`))
Q1.1 <- Q1 %>%
group_by(`Nivel de intensidad`) %>%
summarise(Frecuencia = n()) %>%
mutate(`Nivel de intensidad` = factor(`Nivel de intensidad`,
levels = c("BAJA", "MEDIA", "ALTA", "EXCESIVA"))) %>%
arrange(desc(Frecuencia))
Q1$`Nivel de intensidad` <- as.factor(Q1$`Nivel de intensidad`)
ggplot(Q1.1, aes(x = `Nivel de intensidad`, y = Frecuencia)) +
geom_segment(aes(xend = `Nivel de intensidad`, yend = 0)) +
geom_point(size = 4, color = "orange") +
scale_x_discrete(limits = c("BAJA", "MEDIA", "ALTA", "EXCESIVA"))
ggplot(Q1.1, aes(x = "", y = Frecuencia, fill = `Nivel de intensidad`)) +
geom_bar(width = 1, stat = "identity", color = "black") +
coord_polar(theta = "y", start = 0) +
scale_fill_brewer("Blues") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(size = 14, face = "bold")) +
geom_text(aes(label = (paste0(round(Frecuencia*100/sum(Frecuencia), digits = 2),"%"))),
size = 5,
position = position_stack(vjust = 0.5)) +
ggtitle("Gráfica de pastel")
ggplot(Q1, aes(x = carril, y = `intensidad por hora`, fill = carril)) +
geom_violin(draw_quantiles = c(0.25, 0.5, 0.75), scale = "width") +
geom_hline(yintercept = 2400, linetype = "dashed", color = "#FF0000", size = 1.2) +
theme_bw()
Q1 <- TD_imputados %>%
select(hora, dia, mes, anio, `intensidad total`, carril) %>%
group_by(anio, mes, dia, hora, carril) %>%
summarise(`intensidad por hora` = sum(`intensidad total`)) %>%
mutate(`Nivel de intensidad` = ifelse(`intensidad por hora` < 800 , "BAJA",
ifelse(`intensidad por hora` < 1600, "MEDIA",
ifelse(`intensidad por hora` < 2400, "ALTA",
"EXCESIVA"))),
`Nivel de intensidad` = as.factor(`Nivel de intensidad`)) %>%
arrange(desc(`intensidad por hora`))
Q1.1 <- Q1 %>%
group_by(`Nivel de intensidad`) %>%
summarise(Frecuencia = n()) %>%
mutate(`Nivel de intensidad` = factor(`Nivel de intensidad`,
levels = c("BAJA", "MEDIA", "ALTA", "EXCESIVA"))) %>%
arrange(desc(Frecuencia))
#Q1$`Nivel de intensidad` <- as.factor(Q1$`Nivel de intensidad`)
ggplot(Q1.1, aes(x = `Nivel de intensidad`, y = Frecuencia)) +
geom_segment(aes(xend = `Nivel de intensidad`, yend = 0)) +
geom_point(size = 4, color = "orange") +
scale_x_discrete(limits = c("BAJA", "MEDIA", "ALTA", "EXCESIVA"))
ggplot(Q1.1, aes(x = "", y = Frecuencia, fill = `Nivel de intensidad`)) +
geom_bar(width = 1, stat = "identity", color = "black") +
coord_polar(theta = "y", start = 0) +
scale_fill_brewer("Blues") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(size = 14, face = "bold")) +
geom_text(aes(label = (paste0(round(Frecuencia*100/sum(Frecuencia), digits = 2),"%"))),
size = 5,
position = position_stack(vjust = 0.5)) +
ggtitle("Gráfica de pastel")
ggplot(Q1, aes(x = carril, y = `intensidad por hora`, fill = carril)) +
geom_violin(draw_quantiles = c(0.25, 0.5, 0.75), scale = "width") +
geom_hline(yintercept = 2400, linetype = "dashed", color = "#FF0000", size = 1.2) +
theme_bw()
Q1 <- TD_imputados %>%
select(hora, dia, mes, anio, `intensidad total`, carril) %>%
group_by(anio, mes, dia, hora, carril) %>%
summarise(`intensidad por hora` = sum(`intensidad total`)) %>%
mutate(`Nivel de intensidad` = ifelse(`intensidad por hora` < 800 , "BAJA",
ifelse(`intensidad por hora` < 1600, "MEDIA",
ifelse(`intensidad por hora` < 2400, "ALTA",
"EXCESIVA"))),
`Nivel de intensidad` = as.factor(`Nivel de intensidad`)) %>%
arrange(desc(`intensidad por hora`))
Q1.1 <- Q1 %>%
group_by(`Nivel de intensidad`) %>%
summarise(Frecuencia = n()) %>%
mutate(`Nivel de intensidad` = factor(`Nivel de intensidad`,
levels = c("BAJA", "MEDIA", "ALTA", "EXCESIVA"))) %>%
arrange(desc(Frecuencia))
ggplot(Q1.1, aes(x = `Nivel de intensidad`, y = Frecuencia)) +
geom_segment(aes(xend = `Nivel de intensidad`, yend = 0)) +
geom_point(size = 4, color = "orange") +
scale_x_discrete(limits = c("BAJA", "MEDIA", "ALTA", "EXCESIVA"))
ggplot(Q1.1, aes(x = "", y = Frecuencia, fill = `Nivel de intensidad`)) +
geom_bar(width = 1, stat = "identity", color = "black") +
coord_polar(theta = "y", start = 0) +
scale_fill_brewer("Blues") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(size = 14, face = "bold")) +
geom_text(aes(label = (paste0(round(Frecuencia*100/sum(Frecuencia),
digits = 1),"%"))),
size = 5,
position = position_stack(vjust = 0.5)) +
ggtitle("Gráfica de pastel")
ggplot(Q1, aes(x = carril, y = `intensidad por hora`, fill = carril)) +
geom_violin(draw_quantiles = c(0.25, 0.5, 0.75), scale = "width") +
geom_hline(yintercept = 2400, linetype = "dashed",
color = "#FF0000", size = 1.2) +
theme_bw()
ggplot(Q1.1, aes(x = "", y = Frecuencia, fill = `Nivel de intensidad`)) +
geom_bar(width = 1, stat = "identity", color = "black") +
coord_polar(theta = "y", start = 0) +
scale_fill_brewer("Blues") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(size = 14, face = "bold")) +
geom_text(aes(label = (paste0(round(Frecuencia*100/sum(Frecuencia),
digits = 1),"%"))),
size = 5,
position = position_stack(vjust = 0.7)) +
ggtitle("Gráfica de pastel")
ggplot(Q1.1, aes(x = "", y = Frecuencia, fill = `Nivel de intensidad`)) +
geom_bar(width = 1, stat = "identity", color = "black") +
coord_polar(theta = "y", start = 0) +
scale_fill_brewer("Blues") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(size = 14, face = "bold")) +
geom_text(aes(label = (paste0(round(Frecuencia*100/sum(Frecuencia),
digits = 1),"%"))),
size = 5,
position = position_stack(vjust = 0.6)) +
ggtitle("Gráfica de pastel")
ggplot(Q1.1, aes(x = "", y = Frecuencia, fill = `Nivel de intensidad`)) +
geom_bar(width = 1, stat = "identity", color = "black") +
coord_polar(theta = "y", start = 0) +
scale_fill_brewer("Blues") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(size = 14, face = "bold")) +
geom_text(aes(label = (paste0(round(Frecuencia*100/sum(Frecuencia),
digits = 1),"%"))),
size = 5,
position = position_stack(hjust = 0.6)) +
ggtitle("Gráfica de pastel")
ggplot(Q1.1, aes(x = "", y = Frecuencia, fill = `Nivel de intensidad`)) +
geom_bar(width = 1, stat = "identity", color = "black") +
coord_polar(theta = "y", start = 0) +
scale_fill_brewer("Blues") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(size = 14, face = "bold")) +
geom_text(aes(label = (paste0(round(Frecuencia*100/sum(Frecuencia),
digits = 1),"%"))),
size = 5,
position = position_stack(vjust = 0.6)) +
ggtitle("Gráfica de pastel")
Q1 <- TD_imputados %>%
select(hora, dia, mes, anio, `intensidad total`, carril) %>%
group_by(anio, mes, dia, hora, carril) %>%
summarise(`intensidad por hora` = sum(`intensidad total`)) %>%
mutate(`Nivel de intensidad` = ifelse(`intensidad por hora` < 800 , "BAJA",
ifelse(`intensidad por hora` < 1600, "MEDIA",
ifelse(`intensidad por hora` < 2400, "ALTA",
"EXCESIVA"))),
`Nivel de intensidad` = as.factor(`Nivel de intensidad`))
Q1.1 <- Q1 %>%
group_by(`Nivel de intensidad`) %>%
summarise(Frecuencia = n()) %>%
mutate(`Nivel de intensidad` = factor(`Nivel de intensidad`,
levels = c("BAJA", "MEDIA", "ALTA", "EXCESIVA"))) %>%
arrange(desc(Frecuencia))
ggplot(Q1.1, aes(x = `Nivel de intensidad`, y = Frecuencia)) +
geom_segment(aes(xend = `Nivel de intensidad`, yend = 0)) +
geom_point(size = 4, color = "orange") +
scale_x_discrete(limits = c("BAJA", "MEDIA", "ALTA", "EXCESIVA"))
ggplot(Q1.1, aes(x = "", y = Frecuencia, fill = `Nivel de intensidad`)) +
geom_bar(width = 1, stat = "identity", color = "black") +
coord_polar(theta = "y", start = 0) +
scale_fill_brewer("Blues") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(size = 14, face = "bold")) +
geom_text(aes(label = (paste0(round(Frecuencia*100/sum(Frecuencia),
digits = 1),"%"))),
size = 5,
position = position_stack(vjust = 0.6)) +
ggtitle("Gráfica de pastel")
ggplot(Q1, aes(x = carril, y = `intensidad por hora`, fill = carril)) +
geom_violin(draw_quantiles = c(0.25, 0.5, 0.75), scale = "width") +
geom_hline(yintercept = 2400, linetype = "dashed",
color = "#FF0000", size = 1.2) +
theme_bw()
Q1 <- TD_imputados %>%
select(hora, dia, mes, anio, `intensidad total`, carril) %>%
group_by(anio, mes, dia, hora, carril) %>%
summarise(`intensidad por hora` = sum(`intensidad total`)) %>%
mutate(`Nivel de intensidad` = ifelse(`intensidad por hora` < 800 , "BAJA",
ifelse(`intensidad por hora` < 1600, "MEDIA",
ifelse(`intensidad por hora` < 2400, "ALTA",
"EXCESIVA"))),
`Nivel de intensidad` = as.factor(`Nivel de intensidad`))
Q1.1 <- Q1 %>%
group_by(`Nivel de intensidad`) %>%
summarise(Frecuencia = n()) %>%
mutate(`Nivel de intensidad` = factor(`Nivel de intensidad`,
levels = c("BAJA", "MEDIA", "ALTA", "EXCESIVA")))
ggplot(Q1.1, aes(x = `Nivel de intensidad`, y = Frecuencia)) +
geom_segment(aes(xend = `Nivel de intensidad`, yend = 0)) +
geom_point(size = 4, color = "orange")
ggplot(Q1.1, aes(x = "", y = Frecuencia, fill = `Nivel de intensidad`)) +
geom_bar(width = 1, stat = "identity", color = "black") +
coord_polar(theta = "y", start = 0) +
scale_fill_brewer("Blues") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(size = 14, face = "bold")) +
geom_text(aes(label = (paste0(round(Frecuencia*100/sum(Frecuencia),
digits = 1),"%"))),
size = 5,
position = position_stack(vjust = 0.6)) +
ggtitle("Gráfica de pastel")
ggplot(Q1, aes(x = carril, y = `intensidad por hora`, fill = carril)) +
geom_violin(draw_quantiles = c(0.25, 0.5, 0.75), scale = "width") +
geom_hline(yintercept = 2400, linetype = "dashed",
color = "#FF0000", size = 1.2) +
theme_bw()
blank_theme <- theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(size = 14, face = "bold")
)
select(TD_imputados, `intensidad total`:`distancia media entre vehiculos`) %>%
gather(key = "Medicion", value = "Valor") %>%
mutate(Medicion = as.factor(Medicion)) %>%
ggplot(aes(x = Medicion, y = Valor, fill = Medicion)) +
geom_boxplot() +
#theme_bw()
blank_theme
TD_imputados %>%
select(hora, dia, mes, anio, `intensidad total`, carril) %>%
group_by(anio, mes, dia, hora, carril) %>%
summarise_at(vars(`intensidad total`:`intensidad pesados`), lists(~sum, ~mean))
View(TD_imputados)
TD_imputados %>%
select(hora, dia, mes, anio,
`intensidad total`:`distancia media entre vehiculos`, carril) %>%
group_by(anio, mes, dia, hora, carril) %>%
summarise_at(vars(`intensidad total`:`distancia media entre vehiculos`),
lists(~sum, ~mean))
TD_imputados %>%
select(hora, dia, mes, anio,
`intensidad total`:`distancia media entre vehiculos`, carril) %>%
group_by(anio, mes, dia, hora, carril) %>%
summarise_at(vars(`intensidad total`:`distancia media entre vehiculos`),
list(~sum, ~mean))
TD_imputados %>%
select(hora, dia, mes, anio,
`intensidad total`:`distancia media entre vehiculos`, carril) %>%
group_by(anio, mes, dia, hora, carril) %>%
summarise_at(vars(`intensidad total`:`distancia media entre vehiculos`),
list(sum = ~sum, mean = ~mean))
TD_imputados %>%
select(hora, dia, mes, anio,
`intensidad total`:`distancia media entre vehiculos`, carril) %>%
group_by(anio, mes, dia, hora, carril) %>%
summarise_at(vars(`intensidad total`:`distancia media entre vehiculos`),
list(mean = ~mean))
TD_horas <- TD_imputados %>%
select(hora, dia, mes, anio,
`intensidad total`:`distancia media entre vehiculos`, carril) %>%
group_by(anio, mes, dia, hora, carril) %>%
summarise_at(vars(`intensidad total`:`distancia media entre vehiculos`),
list(sum = ~sum(.), mean = ~mean(.)))
View(TD_horas)
TD_horas <- TD_imputados %>%
select(hora, dia, mes, anio,
`intensidad total`:`distancia media entre vehiculos`, carril) %>%
group_by(anio, mes, dia, hora, carril) %>%
summarise_at(vars(`intensidad total`:`distancia media entre vehiculos`),
list(sum = ~sum(.), mean = ~mean(.))) %>%
select(-(`velocidad media_sum`:`ditancia media entre vehiculos_sum`),
-(`intensidad total_mean`:`intensidad pesados_mean`))
TD_horas <- TD_imputados %>%
select(hora, dia, mes, anio,
`intensidad total`:`distancia media entre vehiculos`, carril) %>%
group_by(anio, mes, dia, hora, carril) %>%
summarise_at(vars(`intensidad total`:`distancia media entre vehiculos`),
list(sum = ~sum(.), mean = ~mean(.))) %>%
select(-(`velocidad media_sum`:`distancia media entre vehiculos_sum`),
-(`intensidad total_mean`:`intensidad pesados_mean`))
TD_horas %>%
select(`intensidad total_sum`:`distancia media entre vehiculos_mean`) %>%
summarise_all(funs(mean(., na.rm = TRUE), sd(., na.rm = TRUE),
median(., na.rm = TRUE), IQR(., na.rm = TRUE))) %>%
gather(key = "variables", value = "valor") %>%
separate(col = 1, into = c("var", "stat"), sep = "_") %>%
spread(key = stat, value = valor) %>%
select(var, mean, sd, median, IQR)
TD_horas %>%
select(`intensidad total_sum`:`distancia media entre vehiculos_mean`) %>%
summarise_all(funs(mean(.), sd(.), median(.), IQR(.)))
colnames(TD_horas) <- gsub("\\_.*", "", colnames(TD_horas))
gather(key = "variables", value = "valor") %>%
separate(col = 1, into = c("var", "stat"), sep = "_") %>%
spread(key = stat, value = valor) %>%
select(var, mean, sd, median, IQR) %>%
kable(head(.), format = "html",
align = "lcccc", table.attr = "style='width:50%;'")
TD_horas %>%
select(`intensidad total_sum`:`distancia media entre vehiculos_mean`) %>%
summarise_all(funs(mean(.), sd(.), median(.), IQR(.))) %>%
gather(key = "variables", value = "valor") %>%
separate(col = 1, into = c("var", "stat"), sep = "_") %>%
spread(key = stat, value = valor) %>%
select(var, mean, sd, median, IQR) %>%
kable(head(.), format = "html",
align = "lcccc", table.attr = "style='width:50%;'")
TD_horas %>%
select(`intensidad total`:`distancia media entre vehiculos`) %>%
summarise_all(funs(mean(.), sd(.), median(.), IQR(.))) %>%
gather(key = "variables", value = "valor") %>%
separate(col = 1, into = c("var", "stat"), sep = "_") %>%
spread(key = stat, value = valor) %>%
select(var, mean, sd, median, IQR) %>%
kable(head(.), format = "html",
align = "lcccc", table.attr = "style='width:50%;'")
TD_horas %>%
select(`intensidad total`:`distancia media entre vehiculos`) %>%
summarise_all(funs(mean(.), sd(.), median(.), IQR(.))) %>%
gather(key = "variables", value = "valor")
TD_horas %>%
select(`intensidad total`:`distancia media entre vehiculos`)
TD_horas %>%
select(`intensidad total`:`distancia media entre vehiculos`)
TD_horas %>%
select(`intensidad total`:`distancia media entre vehiculos`)
TD_horas <- TD_imputados %>%
select(hora, dia, mes, anio,
`intensidad total`:`distancia media entre vehiculos`, carril) %>%
group_by(anio, mes, dia, hora, carril) %>%
summarise_at(vars(`intensidad total`:`distancia media entre vehiculos`),
list(sum = ~sum(.), mean = ~mean(.))) %>%
select(-(`velocidad media_sum`:`distancia media entre vehiculos_sum`),
-(`intensidad total_mean`:`intensidad pesados_mean`))
colnames(TD_horas) <- gsub("\\_.*", "", colnames(TD_horas))
TD_horas_stats <- TD_horas %>%
select(`intensidad total`:`distancia media entre vehiculos`)
View(TD_horas_stats)
TD_horas_stats <- TD_horas %>%
select(6:11)
TD_horas_stats <- TD_horas %>%
select(-(anio:carril))
TD_horas_stats <- TD_horas %>%
select(-anio)
TD_horas_stats <- TD_horas %>%
select(-(anio:carril))
