---
title: "Práctica 6. Análisis Exploratorio de Datos."
author: "Marcelino Martínez Sober, Luis Gómez Chova, Jordi Muñoz Marí, Juan Gómez Sanchis"
date: "`r Sys.Date()`"
output:
  html_document:
    echo: yes
    number_sections: yes
    theme: flatly
    toc: yes
subtitle: Tratamiento de Datos, Grado en Ciencia de Datos - UV
---

```{r setup, cache = F, echo = F, message = F, warning = F, tidy = F}
# CONFIGURACIÓN GENERAL
library(knitr)
options(width = 100)
# Opciones generales chunks
opts_chunk$set(echo = T, message = F, error = F, warning = F,
               comment = NA, fig.align = 'center', dpi = 100, tidy = F,
               cache.path = '.cache/', fig.path = './figure/')
# options(xtable.type = 'html')
knit_hooks$set(inline = function(x) {
  if(is.numeric(x)) {
    round(x, getOption('digits'))
  } else {
    paste(as.character(x), collapse = ', ')
  }
})
# knit_hooks$set(plot = knitr:::hook_plot_html)
opts_chunk$set(fig.width=6, fig.height=5)
```

```{r eval = TRUE, include = FALSE}
# Especificamos las librerías necesarias en esta lista
packages = c("tidyr", "dplyr", "ggplot2", "readr", "skimr", "car", "GGally")
# use this function to check if each package is on the local machine
# if a package is installed, it will be loaded
# if any are not, the missing package(s) will be installed and loaded
package.check <- lapply(packages, FUN = function(x) {
  if (!require(x, character.only = TRUE)) {
    install.packages(x, dependencies = TRUE)
    library(x, character.only = TRUE)
  }
})
# verify they are loaded
search()
```

```{r include = FALSE}
rm(list=ls())
library(tidyr); library(dplyr); library(ggplot2); library(readr); library(skimr)
```

# Introducción y objetivos

El objetivo de esta práctica es realizar un análisis exploratorio de datos: explorando el conjunto de datos; obteniendo los estadísticos básicos de las variables numéricas; visualizando las relaciones entre variables; y calculando las relaciones entre variables tanto numéricas como categóricas.

En esta práctica, las etapas que vamos a considerar en el análisis exploratorio de datos son:

  1. Lectura e inspección de los datos.
  2. Análisis univariante de los datos: variables numéricas y categóricas.
  3. Análisis bivariante de los datos: variables numéricas y categóricas.
  
# Lectura e inspección de los datos

Vamos a trabajar con el conjunto de datos "Nos Autoevaluamos" generado por nosotros al rellenar la tabla de datos de la tarea correspondiente. 

Este conjunto contiene datos perdidos e inconsistencias que habrá que corregir antes de analizar la distribución de los datos. Para evitar estas inconsistencias, estos datos deberán ser eliminados, corregidos o imputados, tal y como vimos en la práctica anterior.

El conjunto "`NosAutoanalizamos_TD2019 - Hoja 1 - Clean.tsv`" ya ha sido procesado en parte para poder trabajar en esta práctica. En él tenemos para cada una de las asignaturas (ALG, ANM, FP, DCS y MD) columnas acabadas en `.num`, con las notas en valor numérico, y columnas acabadas en `.cat`, con valores categóricos: AP para aprobada, NP para no presentado y NC para no compensable.

Variable | Comentarios
---------|-------------------------------------------------------------
Identificación  | Usuario de correo
Age  |	Edad en años
Sex  |	Sexo: 'Femenino', 'Masculino'	
Wr.Hnd  |	Distancia del extremo del índice al extremo del pulgar en centímetros de la mano con la que escribimos
NW.Hnd  |	Mano con la que escribes: 'Izquierda', 'Derecha'	
Fold  |	Brazo que está arriba cuando cruzas los brazos: 'Izquierdo', 'Derecho'
Pulse  |	Ritmo cardíaco, en reposo, en latidos por minuto.	
Clap  |	Posición de las manos al aplaudir: 'Der s Izd', (Derecha sobre izquierda) 'Izq s Der', 'Ninguna'	
Exer  |	Días a la semana que realizas ejercicio físico: Numérica de 0-7
Smoke  |	Fumador: 'Sí' / 'No'	
Height  |	Altura expresada en centímetros	
ALG  |	Calificación obtenida en álgebra. Usa 'NP' para no presentado y 'NC', para no compensable, si procede	
ANM  |	Calificación obtenida en análisis matemático. Usa 'NP' para no presentado y 'NC', para no compensable, si procede	
FP  |	Calificación obtenida en fundamentos de programación. Usa 'NP' para no presentado y 'NC', para no compensable, si procede	
DCS  |	Calificación obtenida en Datos Ciencia y Sociedad. Usa 'NP' para no presentado y 'NC', para no compensable, si procede	
MD  |	Calificación obtenida en Matemática Discreta. Usa 'NP' para no presentado y 'NC', para no compensable, si procede	
HSt  |	Horas de trabajo diarias relacionadas con los estudios, además de la asistencia a clase
Hwork  |	Horas de trabajo remunerado semanales (0 indica que no tiene otro trabajo)	
Comentarios  |  Campo de texto libre para incluir comentarios que consideres sobre la asignatura

## Ejercicio 1: Lectura de datos

  - Lee los datos del fichero con `read_tsv` a una variable llamada `Datos`.
```{r}
Datos <- read_tsv("./data/NosAutoanalizamos_TD2019 - Hoja 1 - Clean.tsv", 
                    trim_ws = TRUE)
```
  
  - Convierte las variables categóricas acabadas en `.cat` a tipo `factor`. Necesitarás las funciones `mutate_at`, `vars`, `ends_with` y `as.factor`.

```{r warning=FALSE}
Datos <- mutate_at(Datos, vars(ends_with(".cat")), ~ as.factor(.))
skim(Datos)
```

## Ejercicio 2: Inspección visual

Inspecciona visualmente los valores del conjunto de datos (`View`) y ordena de mayor a menor y de menor a mayor cada variable.

```{r}
#View(Datos)
#Vamos a realizar un pequeño truco para VISUALIZAR todas las variables ordenadas al mismo tiempo 

kable(head(as.data.frame(apply(select_if(Datos, is.numeric), MARGIN = 2,
                               sort, decreasing = TRUE, na.last = TRUE))),
      format  = "html", table.attr = "style='width:90%;'")

kable(tail(as.data.frame(apply(select_if(Datos, is.numeric), MARGIN = 2,
                               sort, decreasing = TRUE, na.last = FALSE))),
      format  = "html", table.attr = "style='width:90%;'")
```

# Análisis univariante de variables numéricas

## Ejercicio 3: Estadísticos básicos

Empleando las funciones `select` y `summarise_all` (o `summarise_at`) calcula la media, la desviación típica, mediana y el _interquartile range_ (`IQR`) de las variables que acaban en `.num` (notas numéricas).

  * Ten en cuenta que no se puede realizar un análisis estadístico con datos faltantes, pero en la mayoría de los casos se puede optar por no considerar dichos valores al realizar los cálculos (`na.rm=TRUE`).
  * Reordena los resultados para generar una tabla en la que tengas en cada fila una de las variables y en cada columna los estadísticos calculados.
  
    1. Primero usa `gather` para juntar todo en dos columnas, una para los nombres combinados de las variables y sus estadísticos, y otra para los valores.
    2. Luego usa `separate` para separar la columna de nombres en dos, una llamada `var` con el nombre de la variable, y otra llamada `stat` con el nombre del estadístico.
    3. Por último, usa `spread` para distribuir la columna `stat` en cuatro columnas, cada una con el nombre del estadístico.

El resultado final debe ser una tabla parecida a ésta:

var | mean | sd | median | IQR
----|------|----|--------|----
ALG.num|
ANM.num|
etc    |


```{r}
# Estadísticos de todas las columnas numéricas:

Datos_stats <- Datos %>%
               select(ends_with(".num")) %>%
               summarise_all(funs(mean(., na.rm = TRUE), sd(., na.rm = TRUE), 
                                  median(., na.rm = TRUE), IQR(., na.rm = TRUE))) %>%
               gather(key = "variables", value = "valor") %>%
               separate(col = 1, into = c("var", "stat"), sep = "_") %>%
               spread(key = stat, value = valor) %>%
               select(var, mean, sd, median, IQR)
               kable(head(Datos_stats), format = "html",
                     align = "lcccc", table.attr = "style='width:50%;'")

```

## Ejercicio 4: Distribución de datos

Representa gráficamente la curva de notas de la asignatura ALG estimando la distribución de datos: histograma (`geom_histogram`) y curva de densidad (`geom_density`).

  - Recuerda que para que los dos representaciones 'casen' hay que indicarle a `geom_histogram` que use la función `density` para estimar el histograma, es decir: `geom_histogram(aes(y=stat(density)))`.
  - Compara el resultado con la media de las notas para esa asignatura. Puedes marcar dicha media en el gráfico con `geom_point` o con `geom_vline()` especificando el parámetro `xintercept`.

```{r}
ggplot(Datos, aes(x = ALG.num)) +
  geom_histogram(aes(y = stat(density)), breaks=seq(0, 10, by=1), 
                     fill = "red", alpha = 0.2, color = "blue") +
  geom_density(col = "black") + 
  geom_vline(xintercept = mean(Datos$ALG.num, na.rm = TRUE),
             color = "red", linetype = "dashed") +
  xlab("Nota") +
  ylab("Frecuencia") +
  ggtitle("Histograma de notas")
  
```

## Ejercicio 5: Test de normalidad de la distribución de datos

Compara la distribución de probabilidad de las notas de la asignatura ALG con la de una Gaussiana empleando la función `qqPlot` (quantile-quantile plot) de la librería `car`, que representa gráficamente los cuantiles de la distribución analizada respecto de los de una distribución normal (Gaussiana).

```{r}
library(car)
qqPlot(Datos$ALG.num, ylab = "ALG", main = "Test de normalidad")
```

# Análisis univariante de variables categóricas

## Ejercicio 6: Análisis de frecuencias en variables categóricas

Vamos a calcular la frecuencia de cada valor en las variables categóricas de calificaciones con la función `table`.

  * Calcula la frecuencia de cada calificación para la asignatura ALG.
```{r}
table(Datos$ALG.cat)
```
  
  * Usa también la función `table` para calcular la tabla de contingencia con la frecuencia de cada combinación de las calificaciones de las asignaturas ALG y ANM.
```{r}
table(Datos$ALG.cat, Datos$ANM.cat)
```
  
  * Representa la tabla de contingencia usando `mosaicplot`.

```{r}
mosaicplot(table(Datos$ALG.cat, Datos$ANM.cat), main = "Tabla de Contingencia (mosaico)",
           xlab = "ALG", ylab = "ANM", color = 2:6)
```

# Análisis bivariante de variables numéricas

## Ejercicio 7: Matrices de covarianza y correlación

  * Calcula las matrices de covarianza (no acotada) y correlación (acotada), considerando todas las variables con las notas numéricas, para encontrar relaciones (lineales) entre variables.
```{r}
cov1 <- cov(select(Datos, ends_with(".num")), method = "pearson" , use = "complete.obs")
round(cov1, digits = 2) #Con Pearson:  valores entre 0 y 6 aproximadamente.
cov2 <- cov(select(Datos, ends_with(".num")), method = "spearman", use = "complete.obs")
round(cov2, digits = 2) #Con Spearman: valores entre 25 y 105 aproximadamente.

cor1 <- cor(select(Datos, ends_with(".num")), method = "pearson" , use = "complete.obs")
round(cor1, digits = 2) 
cor2 <- cor(select(Datos, ends_with(".num")), method = "spearman", use = "complete.obs")
round(cor2, digits = 2) #Pearson y Spearman muy similares
```
  
  * Compara los resultados para el coeficiente de correlación de Pearson (para variables numéricas) y de Spearman (para variables numéricas ordinales).

**RESPUESTA: **La correlación de Pearson evalúa la relación lineal entre dos variables continuas. Una relación es lineal cuando un cambio en una variable se asocia con un cambio proporcional en la otra variable. No obstante, La correlación de Spearman evalúa la relación monótona entre dos variables continuas u ordinales. En una relación monótona, las variables tienden a cambiar al mismo tiempo, pero no necesariamente a un ritmo constante.

Ahora bien, siendo que ambas matrices son altamente parecidas, se puede deducir que, de haber una relación entre ambas variables, ésta tiende mucho más a ser lineal que a ser de otra morfología. **(fin de respuesta)**

La correlación de Pearson sirve para cuando la relación entre dos variables es lineal, mientras que la de Spearman es robusta frente a relaciones no lineales en datos ordenados.

Para comprobarlo, vamos a aplicar una función no lineal a una de las variables y a calcular la correlación usando los métodos de Pearson y Spearman. Compruébalo entre las variables `sqrt(ALG.num)` y `MD.num`, comparando con los resultados anteriores. 

```{r}
test <- select(Datos, ALG.num, MD.num) %>%
        mutate(sqrt(ALG.num)) %>%
        select(-1)

round(cor(test$MD.num, test$`sqrt(ALG.num)`,
                 method = "pearson" , use = "complete.obs"), digits = 2)

round(cor(test$MD.num, test$`sqrt(ALG.num)`,
                 method = "spearman", use = "complete.obs"), digits = 2)
```

**RESPUESTA: ** Se puede apreciar que el coeficiente de correlación de Pearsons cambió, de ser 0.68 a ser 0.64, debido a que una de las variables sufrió una alteración. Sin embargo, el coeficiente de correlación de Spearman resultó invariante **(fin de respuesta)**

## Ejercicio 8: Representación gráfica de correlación entre variables

Dibuja las matrices de correlación del conjunto de notas numéricas.
Podemos usar `pairs` del paquete base o bien `ggcorr` y `ggpairs` de la librería `GGally`.

```{r}
library(GGally)
pairs(select(Datos, ends_with(".num")))
ggcorr(select(Datos, ends_with(".num")), label = TRUE)
ggpairs(select(Datos, ends_with(".num")))
```

# Análisis bivariante de variables categóricas

## Ejercicio 9: Dependencia entre variables categóricas

Vamos a considerar 2 variables categóricas para determinar su relación en términos de dependencia con el test Chi cuadrado de Pearson ($\chi^2$).

  * Comprueba la dependencia entre los tipos de calificaciones de ALG y ANM.
```{r}
chisq.test(table(Datos$ALG.cat, Datos$ANM.cat), correct = FALSE)
```
  
**RESPUESTA: **Ya que el valor de p-value es < 0.05, aceptamos que las variables ALG y ANM son **dependientes**.
  
  * Comprueba si existe dependencia entre la calificación de ALG y la variable Sex.
```{r}
unique(Datos$Sex)
#Viendo que las variables Sex contienen F, H y M, se cambiarán todas las "H" por "M"
Datos$Sex[Datos$Sex == "H"] <- "M"
chisq.test(table(Datos$ALG.cat, Datos$Sex), correct = FALSE)
```
  
**RESPUESTA: **Ya que el valor de p-value es >> 0.05, aceptamos que las variables ALG y SEX son **independientes**.

Nota: usa la función `chisq.test` con el parámetro `correct=FALSE` y analiza su significancia estadística (si $p<0,05$ rechazamos la hipótesis nula de independencia y concluimos que existe dependencia entre las variables). 

# Entrega de ejercicios

Al finalizar la práctica debes completar el cuestionario de aula virtual. Debes subir a aula virtual el fichero RMarkdown compilado en html o pdf con las soluciones a los ejercicios planteados.
